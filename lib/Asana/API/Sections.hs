{-
   Asana

   This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).

   OpenAPI Version: 3.0.0
   Asana API version: 1.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Asana.API.Sections
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Asana.API.Sections where

import Asana.Core
import Asana.MimeTypes
import Asana.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Sections

-- *** addTaskForSection

-- | @POST \/sections\/{section_gid}\/addTask@
-- 
-- Add task to section
-- 
-- Add a task to a specific, existing section. This will remove the task from other sections of the project.  The task will be inserted at the top of a section unless an insert_before or insert_after parameter is declared.  This does not work for separators (tasks with the resource_subtype of section).
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
addTaskForSection 
  :: (Consumes AddTaskForSection MimeJSON, MimeRender MimeJSON InlineObject29)
  => InlineObject29 -- ^ "inlineObject29"
  -> SectionGid -- ^ "sectionGid" -  The globally unique identifier for the section.
  -> AsanaRequest AddTaskForSection MimeJSON InlineResponse2001 MimeJSON
addTaskForSection inlineObject29 (SectionGid sectionGid) =
  _mkRequest "POST" ["/sections/",toPath sectionGid,"/addTask"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)
    `setBodyParam` inlineObject29

data AddTaskForSection 
instance HasBodyParam AddTaskForSection InlineObject29 

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam AddTaskForSection OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam AddTaskForSection OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)

-- | @application/json@
instance Consumes AddTaskForSection MimeJSON

-- | @application/json@
instance Produces AddTaskForSection MimeJSON


-- *** createSectionForProject

-- | @POST \/projects\/{project_gid}\/sections@
-- 
-- Create a section in a project
-- 
-- Creates a new section in a project. Returns the full record of the newly created section.
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
createSectionForProject 
  :: (Consumes CreateSectionForProject MimeJSON, MimeRender MimeJSON InlineObject28)
  => InlineObject28 -- ^ "inlineObject28"
  -> ProjectGid -- ^ "projectGid" -  Globally unique identifier for the project.
  -> AsanaRequest CreateSectionForProject MimeJSON InlineResponse20017 MimeJSON
createSectionForProject inlineObject28 (ProjectGid projectGid) =
  _mkRequest "POST" ["/projects/",toPath projectGid,"/sections"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)
    `setBodyParam` inlineObject28

data CreateSectionForProject 
instance HasBodyParam CreateSectionForProject InlineObject28 

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam CreateSectionForProject OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam CreateSectionForProject OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)

-- | @application/json@
instance Consumes CreateSectionForProject MimeJSON

-- | @application/json@
instance Produces CreateSectionForProject MimeJSON


-- *** deleteSection

-- | @DELETE \/sections\/{section_gid}@
-- 
-- Delete a section
-- 
-- A specific, existing section can be deleted by making a DELETE request on the URL for that section.  Note that sections must be empty to be deleted.  The last remaining section in a board view cannot be deleted.  Returns an empty data block.
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
deleteSection 
  :: SectionGid -- ^ "sectionGid" -  The globally unique identifier for the section.
  -> AsanaRequest DeleteSection MimeNoContent InlineResponse2001 MimeJSON
deleteSection (SectionGid sectionGid) =
  _mkRequest "DELETE" ["/sections/",toPath sectionGid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)

data DeleteSection  

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam DeleteSection OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam DeleteSection OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)
-- | @application/json@
instance Produces DeleteSection MimeJSON


-- *** getSection

-- | @GET \/sections\/{section_gid}@
-- 
-- Get a section
-- 
-- Returns the complete record for a single section.
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
getSection 
  :: SectionGid -- ^ "sectionGid" -  The globally unique identifier for the section.
  -> AsanaRequest GetSection MimeNoContent InlineResponse20017 MimeJSON
getSection (SectionGid sectionGid) =
  _mkRequest "GET" ["/sections/",toPath sectionGid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)

data GetSection  

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam GetSection OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam GetSection OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)
-- | @application/json@
instance Produces GetSection MimeJSON


-- *** getSectionsForProject

-- | @GET \/projects\/{project_gid}\/sections@
-- 
-- Get sections in a project
-- 
-- Returns the compact records for all sections in the specified project.
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
getSectionsForProject 
  :: ProjectGid -- ^ "projectGid" -  Globally unique identifier for the project.
  -> AsanaRequest GetSectionsForProject MimeNoContent InlineResponse20018 MimeJSON
getSectionsForProject (ProjectGid projectGid) =
  _mkRequest "GET" ["/projects/",toPath projectGid,"/sections"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)

data GetSectionsForProject  

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam GetSectionsForProject OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam GetSectionsForProject OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)

-- | /Optional Param/ "limit" - Results per page. The number of objects to return per page. The value must be between 1 and 100.
instance HasOptionalParam GetSectionsForProject Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "offset" - Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
instance HasOptionalParam GetSectionsForProject Offset where
  applyOptionalParam req (Offset xs) =
    req `setQuery` toQuery ("offset", Just xs)
-- | @application/json@
instance Produces GetSectionsForProject MimeJSON


-- *** insertSectionForProject

-- | @POST \/projects\/{project_gid}\/sections\/insert@
-- 
-- Move or Insert sections
-- 
-- Move sections relative to each other in a board view. One of `before_section` or `after_section` is required.  Sections cannot be moved between projects.  Returns an empty data block.
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
insertSectionForProject 
  :: (Consumes InsertSectionForProject MimeJSON, MimeRender MimeJSON InlineObject30)
  => InlineObject30 -- ^ "inlineObject30"
  -> ProjectGid -- ^ "projectGid" -  Globally unique identifier for the project.
  -> AsanaRequest InsertSectionForProject MimeJSON InlineResponse2001 MimeJSON
insertSectionForProject inlineObject30 (ProjectGid projectGid) =
  _mkRequest "POST" ["/projects/",toPath projectGid,"/sections/insert"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)
    `setBodyParam` inlineObject30

data InsertSectionForProject 
instance HasBodyParam InsertSectionForProject InlineObject30 

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam InsertSectionForProject OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam InsertSectionForProject OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)

-- | @application/json@
instance Consumes InsertSectionForProject MimeJSON

-- | @application/json@
instance Produces InsertSectionForProject MimeJSON


-- *** updateSection

-- | @PUT \/sections\/{section_gid}@
-- 
-- Update a section
-- 
-- A specific, existing section can be updated by making a PUT request on the URL for that project. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged. (note that at this time, the only field that can be updated is the `name` field.)  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated section record.
-- 
-- AuthMethod: 'AuthOAuthOauth2', 'AuthBasicPersonalAccessToken'
-- 
updateSection 
  :: (Consumes UpdateSection MimeJSON, MimeRender MimeJSON InlineObject27)
  => InlineObject27 -- ^ "inlineObject27"
  -> SectionGid -- ^ "sectionGid" -  The globally unique identifier for the section.
  -> AsanaRequest UpdateSection MimeJSON InlineResponse20017 MimeJSON
updateSection inlineObject27 (SectionGid sectionGid) =
  _mkRequest "PUT" ["/sections/",toPath sectionGid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOauth2)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPersonalAccessToken)
    `setBodyParam` inlineObject27

data UpdateSection 
instance HasBodyParam UpdateSection InlineObject27 

-- | /Optional Param/ "opt_pretty" - Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
instance HasOptionalParam UpdateSection OptPretty where
  applyOptionalParam req (OptPretty xs) =
    req `setQuery` toQuery ("opt_pretty", Just xs)

-- | /Optional Param/ "opt_fields" - Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
instance HasOptionalParam UpdateSection OptFields where
  applyOptionalParam req (OptFields xs) =
    req `setQuery` toQueryColl CommaSeparated ("opt_fields", Just xs)

-- | @application/json@
instance Consumes UpdateSection MimeJSON

-- | @application/json@
instance Produces UpdateSection MimeJSON

